<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>base_args_ui</class>
 <widget class="QWidget" name="base_args_ui">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>553</width>
    <height>494</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <layout class="QGridLayout" name="gridLayout_3">
   <item row="5" column="1">
    <layout class="QFormLayout" name="formLayout_6">
     <item row="0" column="0">
      <widget class="QLabel" name="label_7">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The random seed that is used to do all randomization within the training process.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>Seed</string>
       </property>
      </widget>
     </item>
     <item row="0" column="1">
      <widget class="SpinBox" name="seed_input">
       <property name="focusPolicy">
        <enum>Qt::FocusPolicy::StrongFocus</enum>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The random seed that is used to do all randomization within the training process.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="minimum">
        <number>-2147483647</number>
       </property>
       <property name="maximum">
        <number>2147483647</number>
       </property>
       <property name="value">
        <number>23</number>
       </property>
      </widget>
     </item>
     <item row="1" column="0">
      <widget class="QLabel" name="label_9">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The number of layers to skip while training. Generally, for SD1.X models, clip skip is either set to 1 or 2. SDXL doesn't need clip skip, however&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>Clip Skip</string>
       </property>
      </widget>
     </item>
     <item row="1" column="1">
      <widget class="SpinBox" name="clip_skip_input">
       <property name="focusPolicy">
        <enum>Qt::FocusPolicy::StrongFocus</enum>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The number of layers to skip while training. Generally, for SD1.X models, clip skip is either set to 1 or 2. SDXL doesn't need clip skip, however&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="minimum">
        <number>1</number>
       </property>
       <property name="value">
        <number>2</number>
       </property>
      </widget>
     </item>
     <item row="2" column="0">
      <widget class="QLabel" name="label_10">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Prior Loss Weight is the weight of the Prior Loss. Prior Loss is a loss specifically designed to help the model not erase concepts while it trains in new concepts. The weight is how much of an effect the Prior Loss has.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>Prior Loss Weight</string>
       </property>
      </widget>
     </item>
     <item row="2" column="1">
      <widget class="DoubleSpinBox" name="loss_weight_input">
       <property name="focusPolicy">
        <enum>Qt::FocusPolicy::StrongFocus</enum>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Prior Loss Weight is the weight of the Prior Loss. Prior Loss is a loss specifically designed to help the model not erase concepts while it trains in new concepts. The weight is how much of an effect the Prior Loss has.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="minimum">
        <double>0.010000000000000</double>
       </property>
       <property name="singleStep">
        <double>0.010000000000000</double>
       </property>
       <property name="value">
        <double>1.000000000000000</double>
       </property>
      </widget>
     </item>
     <item row="4" column="0" colspan="2">
      <layout class="QHBoxLayout" name="horizontalLayout_5">
       <item>
        <widget class="QCheckBox" name="cache_latents_enable">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Cache Latents Creates a cache of the latent representation of the images prior to training, this speeds up training, and slightly reduces VRAM requirements, but prevents the usage of random crop during runtime&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Cache Latents</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="cache_latents_to_disk_enable">
         <property name="enabled">
          <bool>false</bool>
         </property>
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Cache Latents, but saves the cached files to disk, this means that if you intend to train on the same dataset multiple times, you are able to skip the caching step the second time onward&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>To Disk</string>
         </property>
        </widget>
       </item>
      </layout>
     </item>
     <item row="3" column="0" colspan="2">
      <layout class="QHBoxLayout" name="horizontalLayout_7">
       <item>
        <widget class="QCheckBox" name="xformers_enable">
         <property name="enabled">
          <bool>true</bool>
         </property>
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;XFormers Is a memory optimization library that drastically reduces VRAM usage while not reducing speed of training very much.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Xformers</string>
         </property>
         <property name="checked">
          <bool>false</bool>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="sdpa_enable">
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;SDPA Is a PyTorch memory optimization that drastically reduces VRAM usage while not reducing speed of training very much.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>SDPA</string>
         </property>
        </widget>
       </item>
      </layout>
     </item>
    </layout>
   </item>
   <item row="4" column="1">
    <widget class="QGroupBox" name="resolution_box">
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The base resolution that you are training at. If Height isn't checked, Width acts as both Width and Height. Typically SD1.X models are trained at 512x512, and SDXL models are trained at 1024x1024&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="title">
      <string>Resolution</string>
     </property>
     <layout class="QFormLayout" name="formLayout">
      <item row="0" column="0">
       <widget class="QLabel" name="label">
        <property name="text">
         <string>Width</string>
        </property>
       </widget>
      </item>
      <item row="0" column="1">
       <widget class="SpinBox" name="width_input">
        <property name="focusPolicy">
         <enum>Qt::FocusPolicy::StrongFocus</enum>
        </property>
        <property name="toolTip">
         <string/>
        </property>
        <property name="minimum">
         <number>1</number>
        </property>
        <property name="maximum">
         <number>16777215</number>
        </property>
        <property name="value">
         <number>512</number>
        </property>
       </widget>
      </item>
      <item row="1" column="1">
       <widget class="SpinBox" name="height_input">
        <property name="enabled">
         <bool>false</bool>
        </property>
        <property name="focusPolicy">
         <enum>Qt::FocusPolicy::StrongFocus</enum>
        </property>
        <property name="toolTip">
         <string/>
        </property>
        <property name="minimum">
         <number>1</number>
        </property>
        <property name="maximum">
         <number>16777215</number>
        </property>
        <property name="value">
         <number>512</number>
        </property>
       </widget>
      </item>
      <item row="1" column="0">
       <widget class="QCheckBox" name="height_enable">
        <property name="text">
         <string>Height</string>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
   <item row="5" column="2">
    <layout class="QFormLayout" name="formLayout_5">
     <item row="0" column="0">
      <widget class="QLabel" name="label_3">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Batch Size represents the maximum number of images within any given Batch. Due to bucketing, a Batch may not always be a full batch, as it is only possible to batch from the same bucket&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>Batch Size</string>
       </property>
      </widget>
     </item>
     <item row="0" column="1">
      <widget class="SpinBox" name="batch_size_input">
       <property name="focusPolicy">
        <enum>Qt::FocusPolicy::StrongFocus</enum>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Batch Size represents the maximum number of images within any given Batch. Due to bucketing, a Batch may not always be a full batch, as it is only possible to batch from the same bucket&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="minimum">
        <number>1</number>
       </property>
      </widget>
     </item>
     <item row="1" column="0">
      <widget class="QLabel" name="label_2">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Max Token Length represents the largest size a training prompt can be. Note that tokens are not the same as words.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>Max Token Length</string>
       </property>
      </widget>
     </item>
     <item row="1" column="1">
      <widget class="ComboBox" name="max_token_selector">
       <property name="focusPolicy">
        <enum>Qt::FocusPolicy::StrongFocus</enum>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Max Token Length represents the largest size a training prompt can be. Note that tokens are not the same as words.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <item>
        <property name="text">
         <string>225</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>150</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>75</string>
        </property>
       </item>
      </widget>
     </item>
     <item row="2" column="0">
      <widget class="QLabel" name="label_5">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Training Precision, otherwise known as Mixed Precision, is the main precision that is trained at. Generally, there are parts of the model that trains better at FP32 (full), so mixed precision allows for such parts to be in full precision while keeping the majority in a lower, more VRAM friendly precision.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>Training Precision</string>
       </property>
      </widget>
     </item>
     <item row="2" column="1">
      <widget class="ComboBox" name="mixed_precision_selector">
       <property name="focusPolicy">
        <enum>Qt::FocusPolicy::StrongFocus</enum>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Training Precision, otherwise known as Mixed Precision, is the main precision that is trained at. Generally, there are parts of the model that trains better at FP32 (full), so mixed precision allows for such parts to be in full precision while keeping the majority in a lower, more VRAM friendly precision.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <item>
        <property name="text">
         <string>fp16</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>bf16</string>
        </property>
       </item>
       <item>
        <property name="text">
         <string>float</string>
        </property>
       </item>
      </widget>
     </item>
     <item row="3" column="0">
      <widget class="QLabel" name="label_6">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Max Training Time can be in epochs or in steps. The step calculation for epochs will match perfectly with how sd-scripts calculates their steps if used.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>Max Training Time</string>
       </property>
      </widget>
     </item>
     <item row="3" column="1">
      <layout class="QHBoxLayout" name="horizontalLayout_3">
       <item>
        <widget class="ComboBox" name="max_train_selector">
         <property name="focusPolicy">
          <enum>Qt::FocusPolicy::StrongFocus</enum>
         </property>
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Max Training Time can be in epochs or in steps. The step calculation for epochs will match perfectly with how sd-scripts calculates their steps if used.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <item>
          <property name="text">
           <string>Epochs</string>
          </property>
         </item>
         <item>
          <property name="text">
           <string>Steps</string>
          </property>
         </item>
        </widget>
       </item>
       <item>
        <widget class="SpinBox" name="max_train_input">
         <property name="focusPolicy">
          <enum>Qt::FocusPolicy::StrongFocus</enum>
         </property>
         <property name="toolTip">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Max Training Time can be in epochs or in steps. The step calculation for epochs will match perfectly with how sd-scripts calculates their steps if used.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="minimum">
          <number>1</number>
         </property>
         <property name="maximum">
          <number>16777215</number>
         </property>
        </widget>
       </item>
      </layout>
     </item>
     <item row="4" column="0">
      <widget class="QCheckBox" name="keep_tokens_seperator_enable">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Keep Tokens Seperator is an alternative way to allow for dynamic keep tokens per file versus per folder. Typically this would be used with a string like ||| which is all but guarenteed not to show up within any caption&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>Keep Tokens Seperator</string>
       </property>
      </widget>
     </item>
     <item row="4" column="1">
      <widget class="LineEditWithHighlight" name="keep_tokens_seperator_input">
       <property name="enabled">
        <bool>false</bool>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Keep Tokens Seperator is an alternative way to allow for dynamic keep tokens per file versus per folder. Typically this would be used with a string like ||| which is all but guarenteed not to show up within any caption&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
      </widget>
     </item>
    </layout>
   </item>
   <item row="4" column="2">
    <widget class="QGroupBox" name="groupBox">
     <property name="title">
      <string>Gradient</string>
     </property>
     <layout class="QHBoxLayout" name="horizontalLayout_8">
      <item>
       <layout class="QGridLayout" name="gridLayout">
        <item row="1" column="0">
         <widget class="QCheckBox" name="grad_accumulation_enable">
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Gradient Accumulation is a tweak that does X gradient Accumulation steps for each batch, as such, you can treat it like an extension of your batch size. For example, Gradient Accumulation steps of 2, with a batch size of 4 would give you 2 batches of 4 per step, effectively making it a batch size of 8. One benefit to Gradient Accumulation that you do not have with straight batch size is that the batches may be from different buckets.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="text">
           <string>Gradient Accumuation</string>
          </property>
         </widget>
        </item>
        <item row="1" column="1">
         <widget class="SpinBox" name="grad_accumulation_input">
          <property name="enabled">
           <bool>false</bool>
          </property>
          <property name="focusPolicy">
           <enum>Qt::FocusPolicy::StrongFocus</enum>
          </property>
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Gradient Accumulation is a tweak that does X gradient Accumulation steps for each batch, as such, you can treat it like an extension of your batch size. For example, Gradient Accumulation steps of 2, with a batch size of 4 would give you 2 batches of 4 per step, effectively making it a batch size of 8. One benefit to Gradient Accumulation that you do not have with straight batch size is that the batches may be from different buckets.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="minimum">
           <number>1</number>
          </property>
         </widget>
        </item>
        <item row="0" column="0" colspan="2">
         <widget class="QCheckBox" name="grad_checkpointing_enable">
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Gradient Checkpointing sacrifices some speed for a reduction of VRAM. Particularly useful if you are using a GPU with less VRAM&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="text">
           <string>Gradient Checkpointing</string>
          </property>
         </widget>
        </item>
       </layout>
      </item>
     </layout>
    </widget>
   </item>
   <item row="3" column="1" colspan="2">
    <widget class="QGroupBox" name="base_model_box">
     <property name="sizePolicy">
      <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
       <horstretch>0</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
     <property name="title">
      <string>Model</string>
     </property>
     <layout class="QFormLayout" name="formLayout_3">
      <item row="0" column="0">
       <widget class="QLabel" name="label_4">
        <property name="toolTip">
         <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The base model you want to train on. Typically this would be a model from the SD1.X, 2.X and SDXL families&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
        </property>
        <property name="text">
         <string>Base Model</string>
        </property>
       </widget>
      </item>
      <item row="0" column="1">
       <layout class="QHBoxLayout" name="horizontalLayout">
        <item>
         <widget class="DragDropLineEdit" name="base_model_input">
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The base model you want to train on. Typically this would be a model from the SD1.X, 2.X and SDXL families&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="placeholderText">
           <string>Base Model To Train With</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="base_model_selector">
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The base model you want to train on. Typically this would be a model from the SD1.X, 2.X and SDXL families&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="text">
           <string/>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item row="3" column="0" colspan="2">
       <layout class="QHBoxLayout" name="horizontalLayout_6">
        <item>
         <widget class="QCheckBox" name="v_param_enable">
          <property name="enabled">
           <bool>true</bool>
          </property>
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;V param, short for V-Paramatarization, is a noise schedule that some models use. You can set this to train with this noise schedule versus the EDM version of typical SD1.X and SDXL models&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="text">
           <string>V Param</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="v_pred_enable">
          <property name="enabled">
           <bool>false</bool>
          </property>
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Scales the loss to be in line with EDM&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="text">
           <string>Scale V pred loss</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="FP16_enable">
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Allows training on full fp16. Not compatable with full bf16 or training precision&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="text">
           <string>Full FP16</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="BF16_enable">
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Train in full BF16. Not compatable with full fp16 or training precision&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="text">
           <string>Full BF16</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="FP8_enable">
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Loads the base model in FP8, which should reduce VRAM usage. Training Precision must be one of FP16 or BF16&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="text">
           <string>FP8 Base</string>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item row="2" column="0" colspan="2">
       <layout class="QHBoxLayout" name="horizontalLayout_2">
        <item>
         <widget class="QCheckBox" name="v2_enable">
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Select this if you are using an SD2.X based model.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="text">
           <string>SD2.X Based</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="sdxl_enable">
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Select this if you are using an SDXL based model.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="text">
           <string>SDXL Based</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="no_half_vae_enable">
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This loads the VAE in FP32 or full precision, increases VRAM usage, but is sometimes required on older graphics cards.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="text">
           <string>No Half Vae</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="low_ram_enable">
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Enable this if it is crashing due to you running out of system RAM. Typically, this would only be used when interfacing with Google Colab&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="text">
           <string>Low RAM</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="high_vram_enable">
          <property name="text">
           <string>High VRAM</string>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item row="1" column="0">
       <widget class="QLabel" name="label_11">
        <property name="toolTip">
         <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;An external VAE. Typically used if the VAE in the base model is of poor quality&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
        </property>
        <property name="text">
         <string>External VAE</string>
        </property>
       </widget>
      </item>
      <item row="1" column="1">
       <layout class="QHBoxLayout" name="horizontalLayout_4">
        <item>
         <widget class="DragDropLineEdit" name="vae_input">
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;An external VAE. Typically used if the VAE in the base model is of poor quality&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="placeholderText">
           <string>Vae to train with</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="vae_selector">
          <property name="toolTip">
           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;An external VAE. Typically used if the VAE in the base model is of poor quality&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
          <property name="text">
           <string/>
          </property>
         </widget>
        </item>
       </layout>
      </item>
     </layout>
    </widget>
   </item>
   <item row="6" column="1" colspan="2">
    <layout class="QFormLayout" name="formLayout_2">
     <item row="0" column="0">
      <widget class="QCheckBox" name="comment_enable">
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Comment is a place where you can provide a comment within the metadata of the model. Unfortunately you are fairly limited on what works within the metadata, as things such as quotes, newlines, and slashes are iffy at best, or don't work at all at worst.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="text">
        <string>Comment</string>
       </property>
      </widget>
     </item>
     <item row="0" column="1">
      <widget class="QTextEdit" name="comment_input">
       <property name="enabled">
        <bool>false</bool>
       </property>
       <property name="toolTip">
        <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Comment is a place where you can provide a comment within the metadata of the model. Unfortunately you are fairly limited on what works within the metadata, as things such as quotes, newlines, and slashes are iffy at best, or don't work at all at worst.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
       </property>
       <property name="placeholderText">
        <string>Enter in a comment you want in the metadata</string>
       </property>
      </widget>
     </item>
    </layout>
   </item>
  </layout>
 </widget>
 <customwidgets>
  <customwidget>
   <class>SpinBox</class>
   <extends>QSpinBox</extends>
   <header>modules.ScrollOnSelect.h</header>
  </customwidget>
  <customwidget>
   <class>ComboBox</class>
   <extends>QComboBox</extends>
   <header>modules.ScrollOnSelect.h</header>
  </customwidget>
  <customwidget>
   <class>DoubleSpinBox</class>
   <extends>QDoubleSpinBox</extends>
   <header>modules.ScrollOnSelect.h</header>
  </customwidget>
  <customwidget>
   <class>DragDropLineEdit</class>
   <extends>QLineEdit</extends>
   <header>modules.DragDropLineEdit.h</header>
  </customwidget>
  <customwidget>
   <class>LineEditWithHighlight</class>
   <extends>QLineEdit</extends>
   <header>modules.LineEditHighlight.h</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
